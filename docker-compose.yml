version: '3.9'
services:
  db:
    image: postgres:16
    container_name: endfcop_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: endfcop
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
  api:
    build: ./apps/api
    container_name: endfcop_api
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/endfcop?schema=public
      CORS_ORIGIN: http://localhost:3000
      API_PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./apps/api:/usr/src/app
    command: sh -c "npm run prisma:migrate && npm run start:prod"
  web:
    build: ./apps/web
    container_name: endfcop_web
    env_file:
      - ./.env
    environment:
      NEXT_PUBLIC_API_BASE: /api
    depends_on:
      - api
    volumes:
      - ./apps/web:/usr/src/app
    command: sh -c "npm run start"
  proxy:
    image: nginx:1.27-alpine
    container_name: endfcop_proxy
    ports:
      - "3000:80"
    volumes:
      - ./ops/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
      - api
volumes:
  db_data: